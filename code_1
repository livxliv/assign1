% -------------------------------------------------------------------------
% Course: Hydrology for Engineers
% Assignment 1
% Part 1: Process rainfall data from MeteoSwiss
% -------------------------------------------------------------------------

clear variables %clear the workspace variables
close all %close alla figures
clc %clear the command window

% -------------------------------------------------------------------------
% # 0-1: Data import and cleaning
% useful functions: readtable, isnan, year, month
% -------------------------------------------------------------------------

% import data into table T
T = readtable('data.txt',...
    'HeaderLines', 2,...
    'Format','%s%s%f',... %the format is: text string, text string and float number
    'TreatAsEmpty','-'); %this is how empty data is reported (see metadata line 21)

% Create a vector h containing the hourly precipitation and a vector t
% containing the timestamp
h = T.rre150h0;    %rre150h0 is a MeteoSwiss code 
t = datetime(T.time,'InputFormat','yyyyMMddHH'); %convert to datetime (can take several seconds)
m = month(t); %gives a value in 1-12 to indicate the month of each date
y = year(t); %gives the year of each date

% fix empty values (which appear as NaN values in the Matlab)
emptyValues = isnan(h); %logical test to tell whether a value is missing or not
h(emptyValues) = 0; %give zero to those values
fprintf('%i empty values\n', sum(emptyValues)); %display how many missing values there are


% -------------------------------------------------------------------------
% # 2: Plot with annual rainfall over the years
% -------------------------------------------------------------------------

precipitation=table(y, h, 'VariableNames', {'Year', 'Rain'});

annual_sum = varfun(@sum, precipitation, 'InputVariables', 'Rain', 'GroupingVariables', 'Year');
annual_sum.GroupCount = [];

bar(annual_sum.Year,annual_sum.sum_Rain);
xlabel('Years');
ylabel('Precipitations in mm');
title('Yearly precipitations');

% -------------------------------------------------------------------------
% # 5: Extend to multiple years and multiple durations
% -------------------------------------------------------------------------

% Define durations [hours] for calculating rainfall maxima
D = [1, 3, 6, 12, 24, 48];

% Initialize variables
currentYear = y(1);  % Start with the first year in the data
AnnualMax = [];      % Store the annual maximum rainfall for each duration
yearIndex = 1;

% Loop through the data by year
for i = 1:length(y)
    % Check if we've moved to a new year or reached the end of the data
    if y(i) ~= currentYear || i == length(y)
        currentYearData = h(y == currentYear); % Extract data for the current year
        
        % Initialize max values for each duration
        yearMax = zeros(1, length(D));
        
        % Loop through each duration and calculate maximum rainfall
        for j = 1:length(D)
            duration = D(j); 
            windowMax = []; % To store sums of rainfall over the duration
            
            % Slide through the year's data with a window of the given duration
            for k = 1:(length(currentYearData) - duration + 1)
                windowSum = sum(currentYearData(k:k + duration - 1)); % Sum over the window
                windowMax = [windowMax; windowSum]; % Store the sum
            end
            
            % Store the maximum rainfall for the current duration
            yearMax(j) = max(windowMax);
        end
        
        % Add this year's max values to the AnnualMax matrix
        AnnualMax(yearIndex, :) = yearMax;
        
        % Move to the next year
        currentYear = y(i);
        yearIndex = yearIndex + 1;
    end
end

% Display the result
disp(AnnualMax);
% -------------------------------------------------------------------------
% # 6: save the output
% useful functions: save
% -------------------------------------------------------------------------
% when you are confident about your results, save the variables AnnualMax
% and D by uncommenting the following line: 
save('assignment1_output_part1.mat','D','AnnualMax', 'T');






