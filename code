% -------------------------------------------------------------------------
% Course: Hydrology for Engineers
% Assignment 1
% Part 1: Process rainfall data from MeteoSwiss
% -------------------------------------------------------------------------

clear variables %clear the workspace variables
close all %close alla figures
clc %clear the command window

% -------------------------------------------------------------------------
% # 0-1: Data import and cleaning
% useful functions: readtable, isnan, year, month
% -------------------------------------------------------------------------

% import data into table T
T = readtable('data.txt',...
    'HeaderLines', 2,...
    'Format','%s%s%f',... %the format is: text string, text string and float number
    'TreatAsEmpty','-'); %this is how empty data is reported (see metadata line 21)

% Create a vector h containing the hourly precipitation and a vector t
% containing the timestamp
h = T.rre150h0;    %rre150h0 is a MeteoSwiss code 
t = datetime(T.time,'InputFormat','yyyyMMddHH'); %convert to datetime (can take several seconds)
m = month(t); %gives a value in 1-12 to indicate the month of each date
y = year(t); %gives the year of each date

% fix empty values (which appear as NaN values in the Matlab)
emptyValues = isnan(h); %logical test to tell whether a value is missing or not
h(emptyValues) = 0; %give zero to those values
fprintf('%i empty values\n', sum(emptyValues)); %display how many missing values there are

D = [1, 3, 6, 12, 24, 48];

% Initialize variables
currentYear = y(1981);  
AnnualMax = [];      
yearIndex = 1;

% lignes de la matrice
for i = 1:length(y)
    % Check if we are still in the same year
    if y(i) ~= currentYear || i == length(y)
        currentYearData = h(y == currentYear);
        % store maxima for each duration
        yearMax = zeros(1, length(D));
        
        for j = 1:length(D)
            duration = D(j); 
            fenetre = []; 
            
            % colonnes de la matrice
            for k = 1:(length(currentYearData) - duration + 1)
                windowSum = sum(currentYearData(k:k + duration - 1));
                fenetre = [fenetre; windowSum];
            end
            
            % Store the maximum value for the current duration
            yearMax(j) = max(fenetre);
        end
        
        % Add the result for this year to AnnualMax
        AnnualMax(yearIndex, :) = yearMax;
        
        % Move to the next year
        currentYear = y(i);
        yearIndex = yearIndex + 1;
    end
end

disp(AnnualMax);


% -------------------------------------------------------------------------
% # 2: Plot with annual rainfall over the years
% -------------------------------------------------------------------------

% plot(y,h) ?

% -------------------------------------------------------------------------
% # 6: save the output
% -------------------------------------------------------------------------

save('assignment1_output_part1.mat','D','AnnualMax');

